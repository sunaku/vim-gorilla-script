*gorilla-script.txt*                                        For Vim version 7.3

=============================================================================
Author:  "UnCO" Lin             		*gorilla-script-author*
License: WTFPL (see |gorilla-script-license|)
=============================================================================

CONTENTS					*gorilla-script-contents*

|gorilla-script-introduction|		Introduction and Feature Summary
|gorilla-script-commands|			Commands
|gorilla-script-settings|			Settings
|compiler-gorilla-script|			Compiler

{Vi does not have any of this}

=============================================================================

INTRODUCTION					*gorilla-script*
						*gorilla-script-introduction*

This plugin adds support for GorillaScript syntax, indenting, and compiling.
Also included is an eco syntax and support for GorillaScript in HTML.

COMMANDS					*gorilla-script-commands*

						*:GorillaMake*
:GorillaMake[!] {opts}	Wrapper around |:make| that also passes options in
                        |g:gorilla_make_options| to the compiler. Use |:silent|
                        to hide compiler output. See |:make| for more
                        information about [!] and other helpful commands.

						*:GorillaCompile*
:[range]GorillaCompile [vertical] [{win-size}]
			Shows how the current file or [range] is compiled
			to JavaScript. [vertical] (or vert) splits the
			compile buffer vertically instead of horizontally, and
			{win-size} sets the initial size of the buffer. It can
			be closed quickly with the "q" key.

:GorillaCompile {watch} [vertical] [{win-size}]
			The watch mode of :GorillaCompile emulates the "Try
			GorillaScript" live preview on the GorillaScript web
			site. After making changes to the source file,
			exiting insert mode will cause the preview buffer to
			update automatically. {watch} should be given as
                        "watch" or "unwatch," where the latter will stop the
                        automatic updating. [vertical] is recommended, and
                        'scrollbind' is useful.

						*:GorillaRun*
:[range]GorillaRun	Compiles the file or [range] and runs the resulting
			JavaScript, displaying the output.

SETTINGS					*gorilla-script-settings*

You can configure plugin behavior using global variables and syntax commands
in your |vimrc|.

Global Settings~
						*g:gorilla_compiler*
Set the path to the compiler used by |GorillaMake| and |GorillaCompile| (it's
{gorilla} by default.)
>
	let gorilla_compiler = '/usr/bin/gorilla'
<
						*g:gorilla_make_options*
Set default options |GorillaMake| should pass to the compiler.
>
	let gorilla_make_options = '--bare'
<
						*g:gorilla_compile_vert*
Split the GorillaCompile buffer vertically by default.
>
	let gorilla_compile_vert = 1
<
Syntax Highlighting~
						*ft-gorilla-script-syntax*
Trailing whitespace is highlighted as an error by default. This can be
disabled with:
>
	hi link gorillaSpaceError NONE

COMPILER					*compiler-gorilla-script*

A GorillaScript compiler is provided as a wrapper around {gorilla} and can be
loaded with;
>
    compiler gorilla

This is done automatically when a GorillaScript file is opened if no other
compiler is loaded.

=============================================================================

LICENSE							*gorilla-script-license*

		DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
			Version 2, December 2004

     Copyright (C) 2013 "UnCO" Lin

     Everyone is permitted to copy and distribute verbatim or modified
     copies of this license document, and changing it is allowed as long
     as the name is changed.

		DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
       TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

      0. You just DO WHAT THE FUCK YOU WANT TO.

 vim:tw=78:ts=8:ft=help:norl:
